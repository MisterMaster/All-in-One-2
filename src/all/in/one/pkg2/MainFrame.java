/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package all.in.one.pkg2;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.xml.sax.SAXException;

/**
 *
 * @author TPRGIUB
 */
public class MainFrame extends javax.swing.JFrame implements PropertyChangeListener {

    // My variables
    private File[] filesArray;
    private String searchedStr = "";
    private Task corrector;
    private Task finder;
    private int retval;
    public int selectedTab;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        btn_Load = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtA_Main = new javax.swing.JTextArea();
        lbl_Nr_Loaded_Files = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        prgBar = new javax.swing.JProgressBar();
        btn_Cancel = new javax.swing.JButton();
        btn_Reset = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnl_Correct = new javax.swing.JPanel();
        btn_Correct = new javax.swing.JButton();
        lbl_Corr_Files = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtA_Corr_Files = new javax.swing.JTextArea();
        lbl_Error_Files = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtA_Error_Files = new javax.swing.JTextArea();
        pnl_Find = new javax.swing.JPanel();
        txtF_Search = new javax.swing.JTextField();
        btn_Search = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtA_Found = new javax.swing.JTextArea();
        lbl_Nr_Founded_Files = new javax.swing.JLabel();
        btn_Copy = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("All in One 2");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/all/in/one/resources/frame_work_icon.png")).getImage());

        btn_Load.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all/in/one/resources/load.png"))); // NOI18N
        btn_Load.setText("Load");
        btn_Load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LoadActionPerformed(evt);
            }
        });

        txtA_Main.setColumns(20);
        txtA_Main.setEditable(false);
        txtA_Main.setRows(5);
        jScrollPane1.setViewportView(txtA_Main);

        lbl_Nr_Loaded_Files.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_Nr_Loaded_Files.setForeground(new java.awt.Color(0, 102, 0));
        lbl_Nr_Loaded_Files.setText(" ");

        jLabel2.setText("Designed by TPRGIUB");

        jLabel3.setText("All in One 1.1");

        prgBar.setEnabled(false);

        btn_Cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all/in/one/resources/cancel3.png"))); // NOI18N
        btn_Cancel.setText("Cancel");
        btn_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CancelActionPerformed(evt);
            }
        });

        btn_Reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all/in/one/resources/reset.png"))); // NOI18N
        btn_Reset.setText("Reset");
        btn_Reset.setEnabled(false);
        btn_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ResetActionPerformed(evt);
            }
        });

        jTabbedPane1.setEnabled(false);
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        pnl_Correct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btn_Correct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all/in/one/resources/edit.png"))); // NOI18N
        btn_Correct.setText("Correct");
        btn_Correct.setEnabled(false);
        btn_Correct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CorrectActionPerformed(evt);
            }
        });

        lbl_Corr_Files.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_Corr_Files.setForeground(new java.awt.Color(0, 153, 0));
        lbl_Corr_Files.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all/in/one/resources/correct.png"))); // NOI18N
        lbl_Corr_Files.setText(" 2 files corrected");

        txtA_Corr_Files.setColumns(20);
        txtA_Corr_Files.setEditable(false);
        txtA_Corr_Files.setRows(5);
        txtA_Corr_Files.setEnabled(false);
        jScrollPane2.setViewportView(txtA_Corr_Files);

        lbl_Error_Files.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_Error_Files.setForeground(new java.awt.Color(255, 0, 51));
        lbl_Error_Files.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all/in/one/resources/incorrect.png"))); // NOI18N
        lbl_Error_Files.setText(" 10 files still in Error");

        txtA_Error_Files.setColumns(20);
        txtA_Error_Files.setEditable(false);
        txtA_Error_Files.setRows(5);
        txtA_Error_Files.setEnabled(false);
        jScrollPane3.setViewportView(txtA_Error_Files);

        javax.swing.GroupLayout pnl_CorrectLayout = new javax.swing.GroupLayout(pnl_Correct);
        pnl_Correct.setLayout(pnl_CorrectLayout);
        pnl_CorrectLayout.setHorizontalGroup(
            pnl_CorrectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_CorrectLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_CorrectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 991, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_CorrectLayout.createSequentialGroup()
                        .addGroup(pnl_CorrectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_Error_Files)
                            .addComponent(lbl_Corr_Files))
                        .addGap(307, 307, 307)
                        .addComponent(btn_Correct)
                        .addGap(451, 451, 451)))
                .addContainerGap())
        );
        pnl_CorrectLayout.setVerticalGroup(
            pnl_CorrectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_CorrectLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnl_CorrectLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Corr_Files)
                    .addComponent(btn_Correct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_Error_Files)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        jTabbedPane1.addTab("Correct", pnl_Correct);

        pnl_Find.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtF_Search.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtF_Search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtF_SearchCaretUpdate(evt);
            }
        });
        txtF_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtF_SearchKeyPressed(evt);
            }
        });

        btn_Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all/in/one/resources/search2.png"))); // NOI18N
        btn_Search.setText("Search");
        btn_Search.setEnabled(false);
        btn_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchActionPerformed(evt);
            }
        });

        txtA_Found.setColumns(20);
        txtA_Found.setEditable(false);
        txtA_Found.setRows(5);
        txtA_Found.setEnabled(false);
        jScrollPane4.setViewportView(txtA_Found);

        lbl_Nr_Founded_Files.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbl_Nr_Founded_Files.setForeground(new java.awt.Color(0, 102, 0));
        lbl_Nr_Founded_Files.setText(" ");

        btn_Copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/all/in/one/resources/copy2.png"))); // NOI18N
        btn_Copy.setText("Copy");
        btn_Copy.setEnabled(false);
        btn_Copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CopyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_FindLayout = new javax.swing.GroupLayout(pnl_Find);
        pnl_Find.setLayout(pnl_FindLayout);
        pnl_FindLayout.setHorizontalGroup(
            pnl_FindLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_FindLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_FindLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_FindLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbl_Nr_Founded_Files)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_Copy)
                        .addGap(14, 14, 14))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 991, Short.MAX_VALUE)
                    .addGroup(pnl_FindLayout.createSequentialGroup()
                        .addComponent(txtF_Search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Search)))
                .addContainerGap())
        );
        pnl_FindLayout.setVerticalGroup(
            pnl_FindLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_FindLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(pnl_FindLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtF_Search))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_FindLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Copy)
                    .addComponent(lbl_Nr_Founded_Files))
                .addGap(11, 11, 11))
        );

        jTabbedPane1.addTab("   Find   ", pnl_Find);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(prgBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel3)
                        .addGap(20, 20, 20)))
                .addGap(254, 254, 254)
                .addComponent(btn_Reset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Cancel)
                .addGap(25, 25, 25))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(480, 480, 480)
                        .addComponent(btn_Load))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lbl_Nr_Loaded_Files)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_Load)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_Nr_Loaded_Files)
                .addGap(11, 11, 11)
                .addComponent(jTabbedPane1)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_Cancel)
                                .addComponent(btn_Reset))
                            .addComponent(prgBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // "Load" button's Action
    private void btn_LoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LoadActionPerformed

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setMultiSelectionEnabled(true);

        FileNameExtensionFilter filter = new FileNameExtensionFilter("XML Files Only", "xml");
        fileChooser.setFileFilter(filter);

        retval = fileChooser.showOpenDialog(null);
        String areaText = txtA_Main.getText();

        if (retval == JFileChooser.APPROVE_OPTION) {

            if (retval == 0 && txtA_Main.getLineCount() != 0) {
                txtA_Main.setText("");
            }

            filesArray = fileChooser.getSelectedFiles();

            for (int i = 0; i < filesArray.length; i++) {
                if (i != 0) {
                    txtA_Main.append("\n");
                }
                txtA_Main.append(i + 1 + ".  " + filesArray[i].getName());
            }
            String lbl_text = txtA_Main.getLineCount() != 1
                    ? txtA_Main.getLineCount() + " files loaded."
                    : txtA_Main.getLineCount() + " file loaded.";
            lbl_Nr_Loaded_Files.setText(lbl_text);

            btn_Load.setEnabled(false);
            jTabbedPane1.setEnabled(true);
            btn_Correct.setEnabled(true);
            btn_Correct.requestFocusInWindow();
            btn_Reset.setEnabled(true);
            btn_Correct.setEnabled(true);
        } else if (txtA_Main.getLineCount() == 0) {
            btn_Load.setEnabled(true);
            jTabbedPane1.setEnabled(false);
            btn_Correct.setEnabled(false);
            btn_Reset.setEnabled(false);
        }
    }//GEN-LAST:event_btn_LoadActionPerformed

    private void btn_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CancelActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_CancelActionPerformed

    private void btn_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchActionPerformed

        btn_Search.setEnabled(false);
        setSearchedStr(txtF_Search.getText());
        txtA_Found.setForeground(Color.BLUE);
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        prgBar.setEnabled(true);
        prgBar.setStringPainted(true);

        finder = new MainFrame.Task(selectedTab);
        finder.addPropertyChangeListener(this);
        finder.execute();
    }//GEN-LAST:event_btn_SearchActionPerformed

    // "Reset" button's Action
    private void btn_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ResetActionPerformed

        btn_Load.setEnabled(true);
        btn_Load.doClick();

        if (selectedTab == 0) {
            // Reset Correct Tab
            if (retval == 0) {
                resetCorrectTab();
            }
        } else if (selectedTab == 1) {
            // Reset Find Tab
            if (retval == 0) {
                resetFindTab();
            }
        }
    }//GEN-LAST:event_btn_ResetActionPerformed

    // "Correct" button's Action
    private void btn_CorrectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CorrectActionPerformed

        // Open "Yes-No" Dialog
        int i = JOptionPane.showConfirmDialog(this, "You are about to make modifications on loaded files. \n Are you sure?", "Warning!", 0, 2);
        // 0 = Yes, 1 = No, top-riht cross = -1.
        if (i == 0) {
            txtA_Corr_Files.setEnabled(true);
            txtA_Error_Files.setEnabled(true);
            btn_Correct.setEnabled(false);

            corrector = new MainFrame.Task(selectedTab);
            corrector.addPropertyChangeListener(this);
            corrector.execute();
        }
    }//GEN-LAST:event_btn_CorrectActionPerformed

    private void txtF_SearchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtF_SearchCaretUpdate

        if (txtF_Search.getText().trim().equals("")) {
            btn_Search.setEnabled(false);
        }
        if (!getSearchedStr().equals(txtF_Search.getText())) {
            if (!txtF_Search.getText().trim().equals("")) {
                btn_Search.setEnabled(true);
            }
            prgBar.setValue(0);
            prgBar.setString("");
            txtA_Found.setText("");
            btn_Copy.setEnabled(false);
            lbl_Nr_Founded_Files.setText(" ");
        }
    }//GEN-LAST:event_txtF_SearchCaretUpdate

    private void txtF_SearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtF_SearchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_Search.doClick();
        }
    }//GEN-LAST:event_txtF_SearchKeyPressed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged

        prgBar.setValue(0);
        prgBar.setString("");

        selectedTab = jTabbedPane1.getSelectedIndex();
        if (selectedTab == 0) {
        } else if (selectedTab == 1) {
            txtF_Search.requestFocusInWindow();
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void btn_CopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CopyActionPerformed
        StringSelection stringSelection = new StringSelection(txtA_Found.getText());
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);        // TODO add your handling code here:
    }//GEN-LAST:event_btn_CopyActionPerformed
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Cancel;
    private javax.swing.JButton btn_Copy;
    private javax.swing.JButton btn_Correct;
    private javax.swing.JButton btn_Load;
    private javax.swing.JButton btn_Reset;
    private javax.swing.JButton btn_Search;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_Corr_Files;
    private javax.swing.JLabel lbl_Error_Files;
    private javax.swing.JLabel lbl_Nr_Founded_Files;
    private javax.swing.JLabel lbl_Nr_Loaded_Files;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel pnl_Correct;
    private javax.swing.JPanel pnl_Find;
    private javax.swing.JProgressBar prgBar;
    private javax.swing.JTextArea txtA_Corr_Files;
    private javax.swing.JTextArea txtA_Error_Files;
    public javax.swing.JTextArea txtA_Found;
    private javax.swing.JTextArea txtA_Main;
    private javax.swing.JTextField txtF_Search;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the searchedStr
     */
    public String getSearchedStr() {
        return searchedStr;
    }

    /**
     * @param searchedStr the searchedStr to set
     */
    public void setSearchedStr(String searchedStr) {
        this.searchedStr = searchedStr;
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress".equals(evt.getPropertyName())) {
            int progress = (Integer) evt.getNewValue();
            prgBar.setValue(progress);
            prgBar.setString(progress + "%");
        }
    }

    class Task extends SwingWorker<Void, Void> {

        /* This class should be separated 
           Make a class per Tab
         */
        
        public int selTab = 0;
        boolean smthFound = false;

        public Task() {
        }

        public Task(int selTab) {
            this.selTab = selTab;
        }

        @Override
        public Void doInBackground() {

            if (selTab == 0) {
                // TODO Action for Correct Tab
                int progress;
                setProgress(0);

                for (int i = 0; i < filesArray.length; i++) {
                    try {
                        Thread.sleep(5);
                    } catch (InterruptedException ignore) {
                    }
                    try {
                        File file = filesArray[i];

                        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                        DocumentBuilder dBuilder2 = dbFactory.newDocumentBuilder();
                        Document doc = dBuilder2.parse(file);
                        doc.getDocumentElement().normalize();

                        Element root = doc.getDocumentElement();
                        
                        Policy policy = new Policy(root);
                        policy.detectPolType();
                        policy.checkIds();
                    } catch (ParserConfigurationException | SAXException | IOException ev) {
                        ev.getMessage();
                    }

                    // Calculating the value for progress bar
                    progress = (i + 1) * 100 / filesArray.length;
                    setProgress(progress);
                }

            } else if (selTab == 1) {
                // Action for Find Tab
                int progress;
                setProgress(0);

                for (int i = 0; i < filesArray.length; i++) {
                    try {
                        Thread.sleep(5);
                    } catch (InterruptedException ignore) {
                    }
                    String fileContent = "";
                    try {
                        File file = filesArray[i];
                        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
                        DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
                        Document doc = dBuilder.parse(file);
                        doc.getDocumentElement().normalize();

                        Element root = doc.getDocumentElement();
                        fileContent = root.getTextContent().toLowerCase();
                    } catch (ParserConfigurationException | SAXException | IOException ev) {
                    }

                    if (fileContent.indexOf(getSearchedStr().toLowerCase()) != -1) { // String Found
                        // Activate txt found area
                        txtA_Found.setEnabled(true);
                        txtA_Found.requestFocusInWindow();
                        btn_Copy.setEnabled(true);
                        smthFound = true;

                        if (i != 0 && !"".equals(txtA_Found.getText())) {
                            txtA_Found.append("\n");
                        }
                        txtA_Found.append(txtA_Found.getLineCount() + ".  " + filesArray[i].getName());
                        txtA_Found.setCaretPosition(txtA_Found.getDocument().getLength());
                        if (txtA_Found.getLineCount() == 1) {
                            lbl_Nr_Founded_Files.setText("1 file contains the searched word.");
                        } else {
                            lbl_Nr_Founded_Files.setText(txtA_Found.getLineCount() + " files contain the searched word.");
                        }
                    }
                    // Calculating the value for progress bar
                    progress = (i + 1) * 100 / filesArray.length;
                    setProgress(progress);
                }
            }
            return null;
        }

        /*
         * Executed in event dispatching thread
         */
        @Override
        public void done() {
            if (selTab == 0) {
                // TODO code for Correct Tab
            } else if (selTab == 1) {
                if (!smthFound) {
                    txtA_Found.setEnabled(true);
                    txtA_Found.requestFocusInWindow();
                    txtA_Found.setForeground(Color.RED);
                    txtA_Found.append("Nothing found.");
                    btn_Copy.setEnabled(false);
                    Toolkit.getDefaultToolkit().beep();
                }
            }
            setCursor(null); //turn off the wait cursor
        }
    }

    // Reset method for Correct Tab
    public void resetCorrectTab() {
        btn_Correct.setEnabled(true);
        btn_Correct.requestFocusInWindow();

        lbl_Corr_Files.setText(" ");
        lbl_Corr_Files.setIcon(null);
        lbl_Error_Files.setText(" ");
        lbl_Error_Files.setIcon(null);

        txtA_Corr_Files.setText("");
        txtA_Error_Files.setText("");
        txtA_Corr_Files.setEnabled(false);
        txtA_Error_Files.setEnabled(false);
    }

    // Reset method for Find Tab
    public void resetFindTab() {
        txtF_Search.setText("");
        txtF_Search.requestFocusInWindow();

        txtA_Found.setText("");
        txtA_Found.setEnabled(false);

        btn_Search.setEnabled(false);
        btn_Copy.setEnabled(false);

        lbl_Nr_Founded_Files.setText(" ");

        prgBar.setValue(0);
        prgBar.setString("");
    }
}
